
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.1.RELEASE)

2020-02-19 08:59:41.077  INFO 6943 --- [           main] c.e.u.UserandpaymentinfoApplication      : No active profile set, falling back to default profiles: default
2020-02-19 08:59:50.200  INFO 6943 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-02-19 08:59:52.129  INFO 6943 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 1882ms. Found 4 repository interfaces.
2020-02-19 08:59:54.034  WARN 6943 --- [           main] o.s.boot.actuate.endpoint.EndpointId     : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-02-19 08:59:56.094  INFO 6943 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=2e3fbf22-661f-334a-92e6-e2b27b72d230
2020-02-19 08:59:58.499  INFO 6943 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$8426b9f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-19 08:59:58.882  INFO 6943 --- [           main] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-02-19 08:59:59.071  INFO 6943 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-19 09:00:02.162  INFO 6943 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2020-02-19 09:00:02.237  INFO 6943 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-19 09:00:02.264  INFO 6943 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.27]
2020-02-19 09:00:02.734  INFO 6943 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-19 09:00:02.748  INFO 6943 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 21450 ms
2020-02-19 09:00:04.007  WARN 6943 --- [           main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-02-19 09:00:04.007  INFO 6943 --- [           main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-02-19 09:00:04.061  INFO 6943 --- [           main] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5a021cb9
2020-02-19 09:00:11.036  INFO 6943 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-19 09:00:11.558  INFO 6943 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.8.Final}
2020-02-19 09:00:12.676  INFO 6943 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-19 09:00:13.573  INFO 6943 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-02-19 09:00:14.994  INFO 6943 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-02-19 09:00:15.122  INFO 6943 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-02-19 09:00:21.300  INFO 6943 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-19 09:00:21.342  INFO 6943 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-19 09:00:25.493  WARN 6943 --- [           main] o.s.d.rest.webmvc.halbrowser.HalBrowser  : ---
2020-02-19 09:00:25.493  WARN 6943 --- [           main] o.s.d.rest.webmvc.halbrowser.HalBrowser  : Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-02-19 09:00:25.493  WARN 6943 --- [           main] o.s.d.rest.webmvc.halbrowser.HalBrowser  : ---
2020-02-19 09:00:25.530  WARN 6943 --- [           main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-02-19 09:00:25.531  INFO 6943 --- [           main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-02-19 09:00:25.700  WARN 6943 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-19 09:00:26.163  INFO 6943 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-19 09:00:27.941  WARN 6943 --- [           main] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-02-19 09:00:28.048  INFO 6943 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2020-02-19 09:00:28.152  INFO 6943 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2020-02-19 09:00:28.281  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2020-02-19 09:00:28.439  INFO 6943 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2020-02-19 09:00:28.439  INFO 6943 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.thoughtworks.xstream.core.util.Fields (jar:file:/home/antolovic/KP_SEP/KP/userAndPaymentInfo/target/userandpaymentinfo.jar!/BOOT-INF/lib/xstream-1.4.11.1.jar!/) to field java.util.TreeMap.comparator
WARNING: Please consider reporting this to the maintainers of com.thoughtworks.xstream.core.util.Fields
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-02-19 09:00:28.773  INFO 6943 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2020-02-19 09:00:28.773  INFO 6943 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2020-02-19 09:00:29.066  INFO 6943 --- [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2020-02-19 09:00:29.111  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2020-02-19 09:00:29.112  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2020-02-19 09:00:29.112  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2020-02-19 09:00:29.112  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2020-02-19 09:00:29.112  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2020-02-19 09:00:29.112  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2020-02-19 09:00:29.112  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2020-02-19 09:00:29.453  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2020-02-19 09:00:29.458  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 1
2020-02-19 09:00:29.463  INFO 6943 --- [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-02-19 09:00:29.471  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1582099229470 with initial instances count: 1
2020-02-19 09:00:29.481  INFO 6943 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application USERANDPAYMENT with eureka with status UP
2020-02-19 09:00:29.482  INFO 6943 --- [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1582099229482, current=UP, previous=STARTING]
2020-02-19 09:00:29.489  INFO 6943 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_USERANDPAYMENT/userandpayment:7abc305c4f3fcc566a5cc4eee12a6b63: registering service...
2020-02-19 09:00:29.591  INFO 6943 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_USERANDPAYMENT/userandpayment:7abc305c4f3fcc566a5cc4eee12a6b63 - registration status: 204
2020-02-19 09:00:29.608  INFO 6943 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2020-02-19 09:00:29.609  INFO 6943 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8090
2020-02-19 09:00:29.620  INFO 6943 --- [           main] c.e.u.UserandpaymentinfoApplication      : Started UserandpaymentinfoApplication in 55.11 seconds (JVM running for 58.407)
2020-02-19 09:01:11.614  INFO 6943 --- [nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-19 09:01:11.615  INFO 6943 --- [nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-19 09:01:11.646  INFO 6943 --- [nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 31 ms
Hibernate: select redurl0_.id as id1_3_, redurl0_.item_id as item_id4_3_, redurl0_.url as url2_3_, redurl0_.uuid as uuid3_3_ from red_url redurl0_ where redurl0_.uuid=?
Hibernate: select item0_.id as id1_0_0_, item0_.amount as amount2_0_0_, item0_.naziv as naziv3_0_0_, item0_.seller_id as seller_i5_0_0_, item0_.uuid as uuid4_0_0_, seller1_.id as id1_4_1_, seller1_.email as email2_4_1_, seller1_.url as url3_4_1_ from item item0_ left outer join seller seller1_ on item0_.seller_id=seller1_.id where item0_.id=?
Hibernate: select redurl0_.id as id1_3_, redurl0_.item_id as item_id4_3_, redurl0_.url as url2_3_, redurl0_.uuid as uuid3_3_ from red_url redurl0_ where redurl0_.uuid=?
Hibernate: select item0_.id as id1_0_0_, item0_.amount as amount2_0_0_, item0_.naziv as naziv3_0_0_, item0_.seller_id as seller_i5_0_0_, item0_.uuid as uuid4_0_0_, seller1_.id as id1_4_1_, seller1_.email as email2_4_1_, seller1_.url as url3_4_1_ from item item0_ left outer join seller seller1_ on item0_.seller_id=seller1_.id where item0_.id=?
